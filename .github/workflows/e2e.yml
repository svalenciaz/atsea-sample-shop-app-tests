on:
  schedule:
  - cron : 0 0 * * *
  repository_dispatch:
    types: [deployed]
  workflow_dispatch:
jobs:
  api:
    name: API tests

    runs-on: ubuntu-latest

    env:
      DEFAULT_BRANCH: master
      NODE_VERSION: 14.x
      AWS_REGION: us-east-1
      URL_API_BASE: https://ec2-18-189-239-207.us-east-2.compute.amazonaws.com

    steps:
    - name: Sleep for 10s
      uses: juliangruber/sleep-action@v1
      with:
        time: 10s
    - name: Checkout to branch ${{ env.DEFAULT_BRANCH }}
      uses: actions/checkout@v2

    - name: add .env
      run: |
        export URL_API_BASE="${{ secrets.URL_API_BASE }}"

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - run: npm ci
    - name: Running API tests
      env:
        NODE_TLS_REJECT_UNAUTHORIZED: '0'
      run: npm run test:api

    - name: Upload reports to AWS bucket
      run: aws s3 sync ./report/report-api ${{ secrets.AWS_BUCKET }}/api-tests-report
      if: ${{ always() }}
  ui:
    name: ui test
    runs-on: ubuntu-latest
    env:
      DEFAULT_BRANCH: master
      NODE_VERSION: 14.x
      AWS_REGION: us-east-1
      URL_API_BASE: https://ec2-18-189-239-207.us-east-2.compute.amazonaws.com
    steps:
      - name: Checkout to branch ${{ env.DEFAULT_BRANCH }}
        uses: actions/checkout@v2

      - name: add .env
        run: |
          export URL_API_BASE="${{ secrets.URL_API_BASE }}"
          export HOST_DOCKER_INTERNAL="${{ secrets.HOST_DOCKER_INTERNAL }}"

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - run: npm ci

      - name: run docker-compose
        run: docker-compose up -d

      - name: Running UI tests
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
        run: npm run test:ui

      - name: Upload reports to AWS bucket
        run: aws s3 sync ./report/report-ui ${{ secrets.AWS_BUCKET }}/ui-tests-report
        if: ${{ always() }}

